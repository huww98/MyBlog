@{
    await Html.RenderPartialAsync("_CategorySelectorScriptPartial");
    await Html.RenderPartialAsync("_MarkdownEditorScriptPartial");
}
@model Article
<environment names="Development">
    <script src="~/lib/fileinput/js/fileinput.js"></script>
    <script src="~/lib/masonry.pkgd.js"></script>
    <script src="~/lib/fileinput/themes/fa/theme.js"></script>
    <script src="~/lib/fileinput/js/locales/zh.js"></script>
</environment>
<environment names="Staging,Production">
    <script src="~/lib/fileinput/js/fileinput.min.js"></script>
    <script src="~/lib/masonry.pkgd.min.js"></script>
    <script src="~/lib/fileinput/themes/fa/theme.min.js"></script>
    <script src="~/lib/fileinput/js/locales/zh.min.js"></script>
</environment>
<script type='text/javascript'>
    $("#imageFile").fileinput({
        language: 'zh',
        theme: 'fa',
        uploadUrl: '/UploadImage',
        allowedFileExtensions: ["jpg", "png", "gif", "webm", "webp", "mp4"],
        fileActionSettings: { showZoom: false }
    });

    function addImage(src, alt, title) {
        var content = document.getElementById("Content");
        var startPos = content.selectionStart,
            endPos = content.selectionEnd,
            tmpStr = content.value;
        content.value = tmpStr.substring(0, startPos) + "![";
        if (alt !== undefined) {
            content.value += alt;
        }
        content.value += "](" + src;
        if (title !== undefined && (title + "").length > 0) {
            content.value += ' "' + title + '"';
        }
        content.value += ")" + tmpStr.substring(endPos, tmpStr.length);
        updatePreview($(".markdown-editor"));
    }

    $('#imageFile').on('fileuploaded', function (event, data, previewId, index) {
        var response = data.response;
        addImage(response.src);
    });

    var grid = $('.img-select-grid').masonry({
        itemSelector: '.img-select-item',
        columnWidth: 180
    });
    $('#imageModal').on('shown.bs.modal', function (e) {
        grid.masonry();
    });
    $('#imageSelectTab').on('shown.bs.tab', function (e) {
        grid.masonry();
    });

    $('.img-select-item').click(function () {
        var selectedItem = $(this);
        addImage(selectedItem.data("src"), selectedItem.data("alt"), selectedItem.data("title"));
    });

    function saveDraft() {
        var form = $("#article-form");
        var data = form.serialize();
        var draftId = form.data("draftId");
        var url = draftId !== 0 ? "@(Url.Action("SaveDraft"))?draftId=" + draftId : "@Url.Action("CreateDraft",new { id=Model?.ID })";

        $.post(url, data, function (data) {
            $("#draftStatus").html(data.message);
            if (data.isSuccess) {
                if (draftId === 0) {
                    form.data("draftId", data.draftId);
                }
            }
        }, "json");
    }

    $("#saveDraftButton").click(saveDraft);
</script>
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
