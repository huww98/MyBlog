@model MyBlog.Models.Category

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<form asp-action="Create">
    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="ParentCategory" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <div>
                    <div id="tree"></div>
                </div>

                <span asp-validation-for="ParentCategoryID" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/bootstrap-treeview/src/js/bootstrap-treeview.js"></script>
    <script>
        $('#tree').treeview({
            data : @Html.Raw(ViewBag.ParentCategoryID),
            onNodeSelected: function(event, data) {
                var hiddenInput=document.createElement("input");
                hiddenInput.name="ParentCategoryID";
                hiddenInput.type="hidden"
                hiddenInput.value=data.category_id;
                $(this).after(hiddenInput);
            },

            onNodeUnselected: function(event, data) {
                $(this).siblings("[value="+data.category_id+"]").remove();
            }
        });
    </script>
}
